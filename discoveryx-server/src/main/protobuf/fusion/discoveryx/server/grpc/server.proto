syntax = "proto3";
package fusion.discoveryx.server.grpc;

import "scalapb/scalapb.proto";
import "fusion/discoveryx/model/discoveryx.proto";
import "fusion/discoveryx/server/protocol/config.proto";
import "fusion/discoveryx/server/protocol/naming.proto";
import "fusion/discoveryx/server/protocol/namespace.proto";
import "fusion/discoveryx/server/protocol/user.proto";

option (scalapb.options) = {
  collection_type: "scala.collection.immutable.Seq"
};

service ConfigManagerService {
    // #ListConfig
    // Query configs（Will not return config content）
    rpc ListConfig (fusion.discoveryx.server.protocol.ListConfig) returns (fusion.discoveryx.server.protocol.ConfigResponse) {
    }
    // #ListConfig
}

service NamingManagerService {
    // #ListService
    // Query services
    rpc ListService (fusion.discoveryx.server.protocol.ListService) returns (fusion.discoveryx.server.protocol.NamingResponse) {
    }
    // #ListService

    // #GetService
    // Get one service
    rpc GetService (fusion.discoveryx.server.protocol.GetService) returns (fusion.discoveryx.server.protocol.NamingResponse) {
    }
    // #GetService

    // #CreateService
    // Create a service
    rpc CreateService (fusion.discoveryx.server.protocol.CreateService) returns (fusion.discoveryx.server.protocol.NamingResponse) {
    }
    // #CreateService

    // #ModifyService
    // Modify a service
    rpc ModifyService (fusion.discoveryx.server.protocol.ModifyService) returns (fusion.discoveryx.server.protocol.NamingResponse) {
    }
    // #ModifyService

    // #RemoveService
    // Remove a service
    rpc RemoveService (fusion.discoveryx.server.protocol.RemoveService) returns (fusion.discoveryx.server.protocol.NamingResponse) {
    }
    // #RemoveService


    // #ModifyInstance
    // Modify a instance
    rpc ModifyInstance (fusion.discoveryx.model.InstanceModify) returns (fusion.discoveryx.model.NamingReply) {
    }
    // #ModifyInstance

    // #RemoveInstance
    // Remove a instance
    rpc RemoveInstance (fusion.discoveryx.model.InstanceRemove) returns (fusion.discoveryx.model.NamingReply) {
    }
    // #RemoveInstance

}

service NamespaceManagerService {
    // #ListNamespace
    // Query namespaces
    rpc ListNamespace (fusion.discoveryx.server.protocol.ListNamespace) returns (fusion.discoveryx.server.protocol.ManagementResponse) {
    }
    // #ListNamespace

    // #CreateNamespace
    // Create a namespace
    rpc CreateNamespace (fusion.discoveryx.server.protocol.CreateNamespace) returns (fusion.discoveryx.server.protocol.ManagementResponse) {
    }
    // #CreateNamespace

    // #ModifyNamespace
    // Modify a namespace
    rpc ModifyNamespace (fusion.discoveryx.server.protocol.ModifyNamespace) returns (fusion.discoveryx.server.protocol.ManagementResponse) {
    }
    // #ModifyNamespace

    // #RemoveNamespace
    // Remove a namespace
    rpc RemoveNamespace (fusion.discoveryx.server.protocol.RemoveNamespace) returns (fusion.discoveryx.server.protocol.ManagementResponse) {
    }
    // #RemoveNamespace
}

service UserService {
    // #Login
    rpc Login (fusion.discoveryx.server.protocol.Login) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #Login

    // #Logout
    rpc Logout (fusion.discoveryx.server.protocol.Logout) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #Logout

    // #CurrentSessionUser
    rpc CurrentSessionUser (fusion.discoveryx.server.protocol.CurrentSessionUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #CurrentSessionUser

    // #GetUser
    rpc GetUser (fusion.discoveryx.server.protocol.GetUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #GetUser

    // #CreateUser
    rpc CreateUser (fusion.discoveryx.server.protocol.CreateUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #CreateUser

    // #ModifyUser
    rpc ModifyUser (fusion.discoveryx.server.protocol.ModifyUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #ModifyUser

    // #RemoveUser
    rpc RemoveUser (fusion.discoveryx.server.protocol.RemoveUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #RemoveUser

    // #ListUser
    rpc ListUser (fusion.discoveryx.server.protocol.ListUser) returns (fusion.discoveryx.server.protocol.UserResponse) {
    }
    // #ListUser
}
